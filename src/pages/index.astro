---
/**
 * index.astro — SSR sin fetch a /api/*
 * - Lee YAML con import ?raw y js-yaml
 * - Consulta Supabase directo en SSR (createClient)
 * - Muestra errores claros en UI y loguea en servidor
 */

import yaml from "js-yaml";
import linksRaw from "../data/links.yaml?raw";
import { createClient } from "@supabase/supabase-js";

// Tipos
interface LinkItem {
    title: string;
    subtitle?: string;
    url: string;
}
interface LinkGroup {
    name: string;
    links: LinkItem[];
}
interface LinksData {
    title?: string;
    groups?: LinkGroup[];
}

let links: LinksData = { title: "Accesos rápidos", groups: [] };
let stats = {
    month: { label: "", total: 0 },
    week: { label: "", total: 0 },
    day: { label: "", total: 0 },
};
let linksOk = false;
let statsOk = false;
let linksErr = "";
let statsErr = "";

// Cargar variables de entorno (en dev es útil; en prod no afecta)
try {
    await import("dotenv/config");
} catch {}

// Helper env (primero runtime, fallback a import.meta.env)
const fromEnv = (k: string) => process.env[k] ?? (import.meta as any)?.env?.[k];

// 1) LINKS: YAML embebido (sin FS y sin fetch)
try {
    if (!linksRaw) {
        throw new Error("links.yaml no fue incluido en el bundle (?raw)");
    }
    const parsed = yaml.load(linksRaw as string);
    if (!parsed || typeof parsed !== "object") {
        throw new Error("links.yaml inválido o vacío");
    }
    links = parsed as LinksData;
    linksOk = true;
} catch (e: any) {
    linksErr = e?.message ?? String(e);
    console.error("[index] LINKS ERROR:", linksErr);
}

// 2) STATS: consulta Supabase directamente en SSR (sin fetch)
try {
    const SUPABASE_URL = fromEnv("SUPABASE_URL");
    const SUPABASE_KEY = fromEnv("SUPABASE_KEY");

    if (!SUPABASE_URL || !SUPABASE_KEY) {
        throw new Error(
            `Faltan variables de entorno: ${!SUPABASE_URL ? "SUPABASE_URL " : ""}${!SUPABASE_KEY ? "SUPABASE_KEY" : ""}`.trim(),
        );
    }

    const supabase = createClient(
        SUPABASE_URL as string,
        SUPABASE_KEY as string,
        {
            auth: { persistSession: false },
        },
    );

    const now = new Date();

    const dayStart = new Date(
        Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()),
    );
    const dayEnd = new Date(
        Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate() + 1),
    );

    const dow = (now.getUTCDay() + 6) % 7; // lunes=0
    const weekStart = new Date(
        Date.UTC(
            now.getUTCFullYear(),
            now.getUTCMonth(),
            now.getUTCDate() - dow,
        ),
    );
    const weekEnd = new Date(
        Date.UTC(
            weekStart.getUTCFullYear(),
            weekStart.getUTCMonth(),
            weekStart.getUTCDate() + 7,
        ),
    );

    const monthStart = new Date(
        Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), 1),
    );
    const monthEnd = new Date(
        Date.UTC(now.getUTCFullYear(), now.getUTCMonth() + 1, 1),
    );

    const iso = (d: Date) => d.toISOString();

    const [dayQ, weekQ, monthQ] = await Promise.all([
        supabase
            .from("fiscalizacion")
            .select("*", { count: "exact", head: true })
            .gte("timestamp", iso(dayStart))
            .lt("timestamp", iso(dayEnd)),
        supabase
            .from("fiscalizacion")
            .select("*", { count: "exact", head: true })
            .gte("timestamp", iso(weekStart))
            .lt("timestamp", iso(weekEnd)),
        supabase
            .from("fiscalizacion")
            .select("*", { count: "exact", head: true })
            .gte("timestamp", iso(monthStart))
            .lt("timestamp", iso(monthEnd)),
    ]);

    const errors = [dayQ.error, weekQ.error, monthQ.error].filter(Boolean);
    if (errors.length)
        throw new Error(errors.map((e) => e!.message).join(" | "));

    stats = {
        month: {
            label: now.toLocaleString("es-CL", {
                month: "long",
                year: "numeric",
            }),
            total: monthQ.count ?? 0,
        },
        week: {
            label: `${weekStart.toISOString().slice(0, 10)} → ${new Date(weekEnd.getTime() - 1).toISOString().slice(0, 10)}`,
            total: weekQ.count ?? 0,
        },
        day: {
            label: dayStart.toISOString().slice(0, 10),
            total: dayQ.count ?? 0,
        },
    };
    statsOk = true;
} catch (e: any) {
    statsErr = e?.message ?? String(e);
    console.error("[index] STATS ERROR:", statsErr);
}
---

<html lang="es" class="h-full">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width" />
        <title>{links.title ? `${links.title} — Homepage` : "Homepage"}</title>
        <link rel="icon" href="data:," />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap"
            rel="stylesheet"
        />
    </head>

    <body
        class="min-h-full bg-ink-950 text-slate-200"
        style="font-family: Inter, ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto;"
    >
        <main class="w-full px-4 py-6">
            <!-- Top bar -->
            <div class="mx-auto mb-6 flex max-w-[1400px] items-center gap-4">
                <div
                    class="flex items-center gap-2 rounded-xl bg-ink-900 px-3 py-1.5 shadow-[inset_0_1px_0_rgba(255,255,255,0.04)] ring-1 ring-white/5"
                >
                    <span
                        class="inline-flex h-6 w-6 items-center justify-center rounded-md bg-ink-800 text-xs font-medium"
                        >YOB</span
                    >
                    <nav class="flex gap-4 text-sm text-slate-400">
                        <span class="font-medium text-slate-200">Inicio</span>
                    </nav>
                </div>
            </div>

            <!-- KPIs -->
            <section class="mx-auto max-w-[1400px]">
                <header class="mb-4">
                    <h1 class="text-2xl font-semibold">
                        {links.title ?? "Accesos rápidos"}
                    </h1>
                    <p class="text-slate-400">
                        Panel compacto para enlaces frecuentes y métricas del
                        mes
                    </p>
                </header>

                <div
                    class="rounded-2xl bg-ink-900 p-4 shadow-card ring-1 ring-white/10"
                >
                    <div class="mb-4 flex items-center justify-between">
                        <h3
                            class="text-xs uppercase tracking-wide text-slate-400"
                        >
                            Fiscalizaciones
                        </h3>
                        <span
                            class="rounded-full bg-ink-850 px-2 py-0.5 text-[0.72rem] leading-5 tracking-wide ring-1 ring-white/10 text-slate-300"
                            >Base de datos</span
                        >
                    </div>

                    <div class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
                        <!-- Mes -->
                        <div
                            class="rounded-xl bg-ink-850 p-4 ring-1 ring-white/5"
                        >
                            <p
                                class="text-[0.72rem] leading-5 tracking-wide text-slate-400"
                            >
                                Este mes
                            </p>
                            <p
                                class="mt-1 text-3xl font-semibold text-slate-100"
                            >
                                {stats.month.total ?? 0}
                            </p>
                            <p
                                class="mt-1 text-[0.72rem] leading-5 tracking-wide text-slate-400"
                            >
                                {stats.month.label}
                            </p>
                        </div>
                        <!-- Semana -->
                        <div
                            class="rounded-xl bg-ink-850 p-4 ring-1 ring-white/5"
                        >
                            <p
                                class="text-[0.72rem] leading-5 tracking-wide text-slate-400"
                            >
                                Esta semana
                            </p>
                            <p
                                class="mt-1 text-3xl font-semibold text-slate-100"
                            >
                                {stats.week.total ?? 0}
                            </p>
                            <p
                                class="mt-1 text-[0.72rem] leading-5 tracking-wide text-slate-400"
                            >
                                {stats.week.label}
                            </p>
                        </div>
                        <!-- Día -->
                        <div
                            class="rounded-xl bg-ink-850 p-4 ring-1 ring-white/5"
                        >
                            <p
                                class="text-[0.72rem] leading-5 tracking-wide text-slate-400"
                            >
                                Hoy
                            </p>
                            <p
                                class="mt-1 text-3xl font-semibold text-slate-100"
                            >
                                {stats.day.total ?? 0}
                            </p>
                            <p
                                class="mt-1 text-[0.72rem] leading-5 tracking-wide text-slate-400"
                            >
                                {stats.day.label}
                            </p>
                        </div>
                    </div>

                    {
                        !statsOk && (
                            <p class="mt-3 text-xs text-rose-300/80">
                                No se pudo cargar <code>Supabase</code>.{" "}
                                {statsErr}
                            </p>
                        )
                    }
                </div>
            </section>

            <div class="h-6"></div>

            <!-- LINKS -->
            <section class="mx-auto max-w-[1400px]">
                <div
                    class="rounded-2xl bg-ink-900 p-4 shadow-card ring-1 ring-white/10"
                >
                    <div class="mb-3 flex items-center justify-between">
                        <h3
                            class="text-xs uppercase tracking-wide text-slate-400"
                        >
                            Atajos útiles
                        </h3>
                        <span class="text-xs text-slate-400"
                            >edita en <code class="text-slate-300"
                                >data/links.yaml</code
                            ></span
                        >
                    </div>

                    {
                        links.groups?.length ? (
                            links.groups.map((group) => (
                                <section class="mb-5 last:mb-0">
                                    <h4 class="mb-2 text-sm font-medium text-slate-300">
                                        {group.name}
                                    </h4>
                                    <div class="grid gap-3 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4">
                                        {group.links?.map((card) => (
                                            <a
                                                href={card.url}
                                                target="_blank"
                                                rel="noopener"
                                                class="group rounded-xl bg-ink-850 p-4 ring-1 ring-white/5 transition hover:bg-ink-800"
                                            >
                                                <h5 class="line-clamp-1 font-medium text-slate-200">
                                                    {card.title}
                                                </h5>
                                                {card.subtitle && (
                                                    <p class="mt-1 text-[0.72rem] leading-5 tracking-wide text-slate-400">
                                                        {card.subtitle}
                                                    </p>
                                                )}
                                                <span class="mt-2 inline-block opacity-0 transition group-hover:opacity-100">
                                                    ➜
                                                </span>
                                            </a>
                                        ))}
                                    </div>
                                </section>
                            ))
                        ) : (
                            <p class="text-slate-400">
                                Agrega tus enlaces en{" "}
                                <code class="text-slate-300">
                                    data/links.yaml
                                </code>
                                .
                            </p>
                        )
                    }

                    {
                        !linksOk && (
                            <p class="mt-3 text-xs text-rose-300/80">
                                No se pudo cargar <code>links.yaml</code>.{" "}
                                {linksErr}
                            </p>
                        )
                    }
                </div>
            </section>
        </main>
    </body>
</html>
